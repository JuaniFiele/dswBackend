
@authToken = {{authToken}} // Token de autenticación (debe ser válido para las pruebas)
### Pruebas de validación (todas requieren token)

### Falta campo obligatorio (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "firstname": "Ana",
  "dniType": "DNI"
}

### Email inválido (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "no-es-email",
  "username": "analopez",
  "password": "123456",
  "bornDate": "1990-01-01"
}

### Contraseña muy corta (debería fallar)
POST dswbackend-production-163f.up.railway.app/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "ana@clinica.com",
  "username": "analopez",
  "password": "123",
  "bornDate": "1990-01-01"
}

### Fecha de nacimiento inválida (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "ana@clinica.com",
  "username": "analopez",
  "password": "Password123",
  "bornDate": "2030-01-01"
}

### Creación válida (éxito)
# @name createSecretary
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "ana@clinica.com",
  "username": "analopez",
  "password": "Password123",
  "bornDate": "1990-01-01"
}

### Username duplicado (debería fallar si ejecutamos la creación válida antes)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "87654321",
  "dniType": "DNI",
  "firstname": "María",
  "lastname": "García",
  "mail": "maria@clinica.com",
  "username": "analopez",
  "password": "Password123",
  "bornDate": "1985-05-15"
}

### DNI con tipo de dni ya existente (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Pedro",
  "lastname": "López",
  "mail": "apedro@clinica.com",
  "username": "pedrolopez",
  "password": "Password123",
  "bornDate": "1990-01-01"
}

### Pruebas de actualización

### Obtener ID creado
@secretaryId = {{createSecretary.response.body.data.id}}

### Actualización válida (PUT completo)
PUT http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana María",
  "lastname": "López",
  "mail": "ana.maria@clinica.com",
  "username": "anamaria",
  "password": "NuevaPassword123",
  "bornDate": "1990-01-01"
}

### Actualización parcial (PATCH)
PATCH http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "firstname": "Ana Sofía"
}

### Actualización con email inválido (debería fallar)
PATCH http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "mail": "email-mal-formado"
}

### Eliminación (opcional)
DELETE http://localhost:3000/api/secretaries/{{secretaryId}}
Authorization: Bearer {{authToken}}