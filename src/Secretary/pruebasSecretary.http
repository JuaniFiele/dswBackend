### 1. Login como administrador (para obtener token)
# @name adminLogin
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

###
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJzYW50aW5vIiwicm9sZSI6InNlY3JldGFyeSIsImlhdCI6MTc0NTUyNTgzOCwiZXhwIjoxNzQ1NTI5NDM4fQ.I_GqX8whhUPKpY6ZBghBUWVsXOo3HJQxIhDR9gzMs0c

### 2. Pruebas de validación (todas requieren token)

### 2.1 Falta campo obligatorio (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "firstname": "Ana",
  "dniType": "DNI"
}

### 2.2 Email inválido (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "no-es-email",
  "username": "analopez",
  "password": "123456",
  "bornDate": "1990-01-01"
}

### 2.3 Contraseña muy corta (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "ana@clinica.com",
  "username": "analopez",
  "password": "123",
  "bornDate": "1990-01-01"
}

### 2.4 Creación válida (éxito)
# @name createSecretary
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana",
  "lastname": "López",
  "mail": "ana@clinica.com",
  "username": "analopez",
  "password": "Password123",
  "bornDate": "1990-01-01"
}

### 2.5 Username duplicado (debería fallar)
POST http://localhost:3000/api/secretaries
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "87654321",
  "dniType": "DNI",
  "firstname": "María",
  "lastname": "García",
  "mail": "maria@clinica.com",
  "username": "analopez",
  "password": "Password123",
  "bornDate": "1985-05-15"
}

### 3. Pruebas de actualización

### 3.1 Obtener ID creado
@secretaryId = {{createSecretary.response.body.data.id}}

### 3.2 Actualización válida (PUT completo)
PUT http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "dni": "12345678",
  "dniType": "DNI",
  "firstname": "Ana María",
  "lastname": "López",
  "mail": "ana.maria@clinica.com",
  "username": "anamaria",
  "password": "NuevaPassword123",
  "bornDate": "1990-01-01"
}

### 3.3 Actualización parcial (PATCH)
PATCH http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "firstname": "Ana Sofía"
}

### 3.4 Actualización con email inválido (debería fallar)
PATCH http://localhost:3000/api/secretaries/{{secretaryId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "mail": "email-mal-formado"
}

### 4. Eliminación (opcional)
DELETE http://localhost:3000/api/secretaries/{{secretaryId}}
Authorization: Bearer {{authToken}}